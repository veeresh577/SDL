<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="2" name="pytest" skips="0" tests="27" time="647.947"><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-UPC-A]" time="21.8978281021"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-UPC-E]" time="20.433784008"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-UPC-E1]" time="36.4197778702"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-EAN-8]" time="20.2541871071"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-EAN-13]" time="20.4851989746"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-ISSN]" time="35.3109400272"><failure message="AssertionError: assert [&apos;83013016&apos;] == [&apos;8765301X&apos;]
  At index 0 diff: &apos;83013016&apos; != &apos;8765301X&apos;
  Full diff:
  - [&apos;83013016&apos;]
  + [&apos;8765301X&apos;]">test_Enable.py:51: in test_Enable
    assert output == device.scanner.scan(symbology_num, subtest, barcode[0], size, use)
E   AssertionError: assert [&apos;83013016&apos;] == [&apos;8765301X&apos;]
E     At index 0 diff: &apos;83013016&apos; != &apos;8765301X&apos;
E     Full diff:
E     - [&apos;83013016&apos;]
E     + [&apos;8765301X&apos;]</failure></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Code 128b]" time="20.4997489452"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-EAN-128]" time="20.2795698643"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-ISBT-128]" time="20.4470107555"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Code 39]" time="20.5365579128"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Code 39 Sample with Full ASCII and the symbology enabled]" time="20.4118330479"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Code 93]" time="20.4757330418"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Interleaved 2 of 5]" time="20.2013580799"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Discrete 2 of 5]" time="20.1469972134"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Matrix 2 of 5]" time="20.3949730396"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Codabar]" time="20.2204666138"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-MSI]" time="44.9658007622"><failure message="AssertionError: assert [&apos;20205977&apos;] == [&apos;NR&apos;]
  At index 0 diff: &apos;20205977&apos; != &apos;NR&apos;
  Full diff:
  - [&apos;20205977&apos;]
  + [&apos;NR&apos;]">test_Enable.py:51: in test_Enable
    assert output == device.scanner.scan(symbology_num, subtest, barcode[0], size, use)
E   AssertionError: assert [&apos;20205977&apos;] == [&apos;NR&apos;]
E     At index 0 diff: &apos;20205977&apos; != &apos;NR&apos;
E     Full diff:
E     - [&apos;20205977&apos;]
E     + [&apos;NR&apos;]</failure></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-GS1 Databar 14]" time="20.3131220341"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-GS1 Databar Limited]" time="20.2060456276"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-PDF417]" time="15.9130020142"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-MicroPDF]" time="20.2882640362"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Datamatrix]" time="39.620732069"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Maxicode]" time="21.2149140835"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-QR Code]" time="20.4920930862"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-MicroQR]" time="20.0856122971"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Aztec]" time="20.6293230057"></testcase><testcase classname="tests.test_Enable" file="tests/test_Enable.py" line="45" name="test_Enable[5001-5000-Han-Xin]" time="20.990748167"></testcase></testsuite>